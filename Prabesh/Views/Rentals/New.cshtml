@model dynamic

@{
    ViewBag.Title = "Rental Form";
}

<style>
    .list-group-item {
        display: flex;
        justify-content: space-between;
        width: 280px;
    }

    .remove-movie {
        height: 21px;
        padding: 1px;
        width: 55px;
    }
</style>


<div class="container">
    <div class="row">

        @*1st column*@
        <div class="col-md-6">
            <h2>Rental Form </h2>
            @*this helper method <!--@Ajax.BeginForm()--> is designed to call actions in MVC controller not API controllers*@
            <form id="newRental">
                <div class="form-group">
                    <label>Customer</label>
                    <div class="tt-container">
                        <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
                    </div>
                </div>

                <div class="form-group">
                    <label>Movie</label>
                    <select id="movieDropdown" name="movieDropdown" data-rule-AtleastOneMovie="true" class="form-control">
                        <option value="">--- Select Movie ---</option>
                    </select>
                </div>

                <div class="row">
                    <div class="col-md-4 col-sm-4">
                        <ul id="selectedmovies" class="list-group"></ul>
                    </div>
                </div>

                <div class="form-group">
                    <label>Discount (%)</label>
                    <div class="tt-container">
                        <input id="discountPercentage" name="discountPercentage" type="number" class="form-control" min="0" max="100" />
                    </div>
                </div>

                <div class="form-group">
                    <label>VAT (%)</label>
                    <div class="tt-container">
                        <input id="vat" name="vat" type="number" readonly class="form-control" />
                    </div>
                </div>

                <div class="form-group">
                    <label>Total Amount</label>
                    <div class="tt-container">
                        <input id="totalAmount" name="totalAmount" type="number" readonly class="form-control" />
                    </div>
                </div>

                <button class="btn btn-primary">Submit</button>
            </form>
        </div>

        @*2nd Column*@
        <div class="col-md-6">
            <div id="rentalSummary">
                @*rentalsummary*@
            </div>

            <button id="printbutton" name="printbutton" class="btn btn-primary" style="display:none;">Print Receipt</button>

            <button id="download" name="download" class="btn btn-primary" style="display:none;">Download Receipt</button>

            @*hidden container for printing*@
            <div id="printcontainer" style="display:none;"></div>
        </div>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            toastr.options = {
                "progressBar": true,
                "positionClass": "toast-bottom-right",
            }
            let selectedmovie = [];

            //movie dropdown
            $.get("/api/movies", function (movies) {
                movies.forEach(function (movie) {
                    $("#movieDropdown").append(
                        `<option value="${movie.id}" data-price="${movie.price}">${movie.name}</option>`
                    );
                });
            });

            $("#movieDropdown").change(function () {
                var id = $(this).val();
                var name = $("#movieDropdown option:selected").text();
                var price = $("#movieDropdown option:selected").data("price");

                addMovie(id, name, price);
                $(this).val("");
                vm.movies = selectedmovie.map(m => ({id : parseInt(m.id), quantity: m.quantity}));

                updateTotalAmount();
            });

            function addMovie(movieId, movieName, price) {
                let movie = selectedmovie.find(m => m.id === movieId);

                if (movie) {
                    movie.quantity++;
                } else {
                    selectedmovie.push({ id: movieId, name: movieName, price: price, quantity: 1 });
                }

                renderMovies();
            }

            function renderMovies() {
                let container = document.getElementById("selectedmovies");
                container.innerHTML = "";

                let total = 0;

                selectedmovie.forEach(m => {
                    let lineTotal = m.price * m.quantity;
                    total += lineTotal;

                    container.innerHTML += `<div class='list-group-item'>
                        <span> ${m.name} × ${m.quantity} </span>
                        <span> $${lineTotal} </span>
                          <button class="btn btn-danger btn-sm remove-movie" data-id="${m.id}">Remove</button>
                        </div>`;
                });

                document.getElementById("totalAmount").value = "Total: $" + total;
            }

            var vm = {
                movies: [],
                customerId: null,
                discountPercentage: 0,
                totalAmount: 0,
                vat: 3
            };

            $("#selectedmovies").off("click", ".remove-movie").on("click", ".remove-movie", function () {
                const id = String($(this).data("id"));
                selectedmovie = selectedmovie.filter(m => String(m.id) !== id);
                vm.movies = selectedmovie.map(m => ({ id: parseInt(m.id), quantity: m.quantity }));

                renderMovies();
                updateTotalAmount();
            });

            $("#vat").val(vm.vat);

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                vm.customerId = customer.id;
            });

            function updateTotalAmount() {
                console.log("Updating total amount with the following data:");
                console.log(JSON.stringify(vm));
                let subtotal = selectedmovie.reduce((sum, m) => sum + m.price * m.quantity, 0);

                let discount = vm.discountPercentage ? (subtotal * vm.discountPercentage / 100) : 0;
                let vatAmount = vm.vat ? ((subtotal - discount) * vm.vat / 100) : 0;

                let total = subtotal - discount + vatAmount;

                vm.totalAmount = total;

                $("#totalAmount").val(total.toFixed(2)); // show 2 decimals
            }


            $("#discountPercentage").on('input', function () {
                vm.discountPercentage = parseFloat($(this).val());
                updateTotalAmount();
            });


            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer.");


            $.validator.addMethod("AtleastOneMovie", function () {
                return vm.movies.length > 0;
            }, "Please select atleast one movie.");

            var validator = $("#newRental").validate({
                submitHandler: function () {

                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        data: JSON.stringify(vm),
                        contentType: "application/json; charset=utf-8"
                    })
                        .done(function () {
                            toastr.success("Rentals successfully recorded.");

                            let receiptMovies = "";
                            selectedmovie.forEach(m => {
                                receiptMovies += `<li>${m.name} × ${m.quantity} - $${(m.price * m.quantity).toFixed(2)}</li>`;
                            });

                            $("#rentalSummary").html(
                                "<h3>Receipt</h3>" +
                                "<p> Customer Name : " + $("#customer").val() + "</p>" +
                                "<p> Movies : </p>" +
                                "<ul>" + receiptMovies + "</ul>" +
                                "<p> Discount Percentage : " + vm.discountPercentage + " % </p>" +
                                "<p> VAT: " + vm.vat + " % </p>" +
                                "<p>Total Amount : $" + vm.totalAmount + "</p>"
                            );

                            $("#printbutton").show();
                            $("#download").show();

                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#selectedMovies").empty();
                            $("#discountPercentage").val("");
                            $("totalAmount").val("");
                            $("#selectedmovies").empty();

                            vm = {
                                movieIds: [], customerId: null,
                                discountPercentage: 0,
                                totalAmount: 0
                            };

                            validator.resetForm();

                        })
                        .fail(function (xhr) {
                            toastr.error(xhr.responseText); 
                        });
                    return false;
                }
            });

            //print functionality
            $("#printbutton").click(function () {

                var printcontents = $("#rentalSummary").html();
                var printwindow = window.open('', '', 'height:300,width:400');
                printwindow.document.write('<html><head><title>Receipt</title></head><body>');

                printwindow.document.write('<style>');
                printwindow.document.write('body { font-family: Arial, sans-serif; padding: 20px; } h3 { color: #333; } p { margin: 0 0 10px; } ul { list-style-type: none; padding: 0; } .list-group-item { display: flex; justify-content: space-between; border: 1px solid #ccc; padding: 5px; margin-bottom: 5px; } </style>');
                printwindow.document.write(printcontents);
                printwindow.document.write('</head></body>');
                printwindow.document.close();
                printwindow.print();
            });

            $("#download").click(async function () {
                var { jsPDF } = window.jspdf;
                var doc = new jsPDF();
                await html2canvas(document.querySelector("#rentalSummary"), {
                    scale: 6
                }).then(canvas => {
                    doc.addImage(canvas.toDataURL("image/png"), "PNG", 10, 10, 180, 160);

                    doc.save("receipt.pdf");
                });

            });

        });
    </script>

}
