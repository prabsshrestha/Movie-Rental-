@using Prabesh.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>

<style>
    .password-container {
        position: relative;
    }

    .toggle-password {
        position: relative;
        left: 257px;
        top: 50%;
        transform: translateY(-189%);
        cursor: pointer;
        display: flex;
        align-items: center;
    }
</style>
<script type="text/javascript">


    $(document).ready(function () {
        $(".toggle-password").click(function () {

            var passwordInput = $(this).siblings("input");
            var toggleIcon = $(this).find("i");
            if (passwordInput.attr("type") === "password") {
                passwordInput.attr("type", "text");
                toggleIcon.removeClass("ph-eye-slash").addClass("ph-eye");
            } else {
                passwordInput.attr("type", "password");
                toggleIcon.removeClass("ph-eye").addClass("ph-eye-slash");
            }
        });

    });
</script>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10 password-container">
                        <div class="position-relative">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            <span class="toggle-password">
                                <i class="ph ph-eye-slash"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <div style="display: flex; justify-content: start; gap: 13rem;">
                    <p>

                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>
                    <p>
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                </div>
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}