@model Prabesh.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .password-container {
        position: relative;
    }

    .toggle-password {
        position: relative;
        left: 257px;
        top: 50%;
        transform: translateY(-162%);
        cursor: pointer;
        display: flex;
        align-items: center;
    }
</style>
<script type="text/javascript">


    $(document).ready(function () {
        $(".toggle-password").click(function () {

            var passwordInput = $(this).siblings("input");
            var toggleIcon = $(this).find("i");
            if (passwordInput.attr("type") === "password") {
                passwordInput.attr("type", "text");
                toggleIcon.removeClass("ph-eye-slash").addClass("ph-eye");
            } else {
                passwordInput.attr("type", "password");
                toggleIcon.removeClass("ph-eye").addClass("ph-eye-slash");
            }
        });

    });
</script>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @autocomplete = "off" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @autocomplete = "off" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 password-container">
            <div class="position-relative">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @autocomplete = "off" })
                <span class="toggle-password">
                    <i class="ph ph-eye-slash"></i>
                </span>
            </div>
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 password-container">
            <div class="position-relative">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                <span class="toggle-password">
                    <i class="ph ph-eye-slash"></i>
                </span>
            </div>


        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Birthdate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Birthdate, "{0:yyyy-MM-dd}", new { @class = "form-control", Type = "date" })
            @Html.ValidationMessageFor(m => m.Birthdate)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.DrivingLicense, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.DrivingLicense, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

